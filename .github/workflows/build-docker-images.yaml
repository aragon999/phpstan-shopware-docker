name: Build Docker images

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  PHPSTAN_VERSION: 0.12.48
  DOCKER_REPOSITORY: aragon999/phpstan-shopware

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shopware-version: ['v6.2.0', 'v6.2.1', 'v6.2.2', 'v6.2.3', 'v6.3.0.2', 'v6.3.1.1', 'v6.3.2.0']

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Get Tag
        id: get-docker-tag
        run: |
          shopware_version_tag=$(echo "${{ matrix.shopware-version }}" | grep -m1 -E '(v[0-9]+\.[0-9]+\.[0-9]+)' -o)
          [ "${shopware_version_tag}" == "" ] && exit 1

          tag="${{ env.DOCKER_REPOSITORY }}:${shopware_version_tag}"
          echo "Shopware version ${{ matrix.shopware-version }}"
          echo "Image Tag: ${tag}"

          echo "::set-env name=SHOPWARE_VERSION_TAG::${shopware_version_tag}"
          echo "::set-output name=tag::${tag}"

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          build_args: PHPSTAN_VERSION=${{ env.PHPSTAN_VERSION }},SHOPWARE_VERSION=${{ matrix.shopware-version }}
          tags: ${{ steps.get-docker-tag.outputs.tag }}
          push: false

      - name: Run basic checks
        run: |
          # Check phpstan version of the image
          docker run --rm ${{ steps.get-docker-tag.outputs.tag }} \
            | grep "${PHPSTAN_VERSION}" || exit_code=$?
          [[ "$exit_code" -ne "0" ]] \
            && docker run --rm ${{ steps.get-docker-tag.outputs.tag }} \
            && echo "Did not find expected phpstan version" \
            && exit ${exit_code}

          # Check that phpstan has access to the shopware classes
          docker run --rm ${{ steps.get-docker-tag.outputs.tag }} \
            analyze --level 5 \
            /composer/vendor/shopware/core/Content/Property

      - name: Check for secrets
        id: check-secrets
        run: |
          if [ "${{ secrets.DOCKER_USERNAME }}" != "" ] && [ "${{ secrets.DOCKER_PASSWORD }}" != "" ]
          then
            echo ::set-output name=secrets::'true'
          else
            echo "No Docker credentials found, skipping push."
          fi

      - name: Push docker image
        uses: docker/build-push-action@v2
        if: ${{ steps.check-secrets.outputs.secrets }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          build_args: PHPSTAN_VERSION=${{ env.PHPSTAN_VERSION }},SHOPWARE_VERSION=${{ matrix.shopware-version }}
          tags: ${{ steps.get-docker-tag.outputs.tag }}
          push: true
