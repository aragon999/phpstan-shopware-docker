name: Build Docker images

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  PHPSTAN_VERSION: 0.12.37
  DOCKER_REPOSITORY: aragon999/phpstan-shopware

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shopware-version: ['v6.2.0', 'v6.2.1', 'v6.2.2', 'v6.2.3']

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Get Tags
        id: get-docker-tags
        run: |
          # Strip git ref prefix from version
          version=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && version=$(echo $version | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$version" == "master" ] && version=latest

          tags="${{ matrix.shopware-version }},${{ matrix.shopware-version }}-${{ env.PHPSTAN_VERSION }},${{ matrix.shopware-version }}-${{ env.PHPSTAN_VERSION }}-${version}"

          echo "Release version ${version}"
          echo "Image Tags: ${tags}"
          echo "::set-output name=tags::${tags}"

      - name: Build docker image
        uses: docker/build-push-action@v1
        with:
          repository: ${{ env.DOCKER_REPOSITORY }}
          build_args: PHPSTAN_VERSION=${{ env.PHPSTAN_VERSION }},SHOPWARE_VERSION=${{ matrix.shopware-version }}
          tags: ${{ steps.get-docker-tags.outputs.tags }}
          push: false

      - name: Run basic checks
        run: |
          # Check phpstan version of the image
          docker run --rm ${DOCKER_REPOSITORY}:${{ matrix.shopware-version }}-${PHPSTAN_VERSION} \
            | grep "${PHPSTAN_VERSION}" || exit_code=$?
          [[ "$exit_code" -ne "0" ]] \
            && docker run --rm ${DOCKER_REPOSITORY}:${{ matrix.shopware-version }}-${PHPSTAN_VERSION} \
            && echo "Did not find expected phpstan version" \
            && exit ${exit_code}

          # Check that phpstan has access to the shopware classes
          docker run --rm ${DOCKER_REPOSITORY}:${{ matrix.shopware-version }}-${PHPSTAN_VERSION} \
            analyze --level 5 \
            /composer/vendor/shopware/core/Content/Property \
            /composer/vendor/shopware/core/Checkout/Cart

      - name: Check for secrets
        id: check-secrets
        run: |
          if [ "${{ secrets.DOCKER_USERNAME }}" != "" ] && [ "${{ secrets.DOCKER_PASSWORD }}" != "" ]
          then
            echo ::set-output name=secrets::'true'
          else
            echo "No Docker credentials found, skipping push."
          fi

      - name: Push docker image
        uses: docker/build-push-action@v1
        if: ${{ steps.check-secrets.outputs.secrets }}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ env.DOCKER_REPOSITORY }}
          build_args: PHPSTAN_VERSION=${{ env.PHPSTAN_VERSION }},SHOPWARE_VERSION=${{ matrix.shopware-version }}
          tags: ${{ steps.get-docker-tags.outputs.tags }}
          push: true
